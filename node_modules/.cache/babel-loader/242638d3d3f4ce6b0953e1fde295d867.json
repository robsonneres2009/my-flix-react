{"ast":null,"code":"import React from 'react';\nimport Axios from 'axios';\nexport const getMovies = () => {\n  return new Promise((resolve, reject) => {\n    Axios.get('http://api.tvmaze.com/schedule').then(response => {\n      if (response.status == '200') {\n        resolve(response.data);\n      } else {\n        reject(false);\n      }\n    }).catch(err => {\n      reject(false);\n    });\n  });\n};\nexport const getMovieById = id => {\n  return new Promise((resolve, reject) => {\n    Axios.get(`http://api.tvmaze.com/shows/${id}`).then(response => {\n      if (response.status == '200') {\n        resolve(response.data);\n      } else {\n        reject(false);\n      }\n    }).catch(err => {\n      reject(false);\n    });\n  });\n};\nexport const getMovieByString = string => {\n  return new Promise((resolve, reject) => {\n    Axios.get(`http://api.tvmaze.com/search/shows?q=${string}`).then(response => {\n      if (response.status == '200') {\n        resolve(response.data);\n      } else {\n        reject(false);\n      }\n    }).catch(err => {\n      reject(false);\n    });\n  });\n};","map":{"version":3,"sources":["/Users/neres/Documents/Projetos/my-flix-react/src/api/movies.js"],"names":["React","Axios","getMovies","Promise","resolve","reject","get","then","response","status","data","catch","err","getMovieById","id","getMovieByString","string"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AAEA,OAAO,MAAMC,SAAS,GAAG,MAAM;AAC3B,SAAO,IAAIC,OAAJ,CAAY,CAACC,OAAD,EAAUC,MAAV,KAAqB;AACpCJ,IAAAA,KAAK,CAACK,GAAN,CAAU,gCAAV,EACCC,IADD,CACMC,QAAQ,IAAI;AACd,UAAGA,QAAQ,CAACC,MAAT,IAAmB,KAAtB,EAA4B;AACxBL,QAAAA,OAAO,CAACI,QAAQ,CAACE,IAAV,CAAP;AACH,OAFD,MAEK;AACDL,QAAAA,MAAM,CAAC,KAAD,CAAN;AACH;AACJ,KAPD,EAQCM,KARD,CAQOC,GAAG,IAAI;AACVP,MAAAA,MAAM,CAAC,KAAD,CAAN;AACH,KAVD;AAWH,GAZM,CAAP;AAaH,CAdM;AAgBP,OAAO,MAAMQ,YAAY,GAAIC,EAAD,IAAQ;AAChC,SAAO,IAAIX,OAAJ,CAAY,CAACC,OAAD,EAAUC,MAAV,KAAqB;AACpCJ,IAAAA,KAAK,CAACK,GAAN,CAAW,+BAA8BQ,EAAG,EAA5C,EACCP,IADD,CACMC,QAAQ,IAAI;AACd,UAAGA,QAAQ,CAACC,MAAT,IAAmB,KAAtB,EAA4B;AACxBL,QAAAA,OAAO,CAACI,QAAQ,CAACE,IAAV,CAAP;AACH,OAFD,MAEK;AACDL,QAAAA,MAAM,CAAC,KAAD,CAAN;AACH;AACJ,KAPD,EAQCM,KARD,CAQOC,GAAG,IAAI;AACVP,MAAAA,MAAM,CAAC,KAAD,CAAN;AACH,KAVD;AAWH,GAZM,CAAP;AAaH,CAdM;AAgBP,OAAO,MAAMU,gBAAgB,GAAIC,MAAD,IAAY;AACxC,SAAO,IAAIb,OAAJ,CAAY,CAACC,OAAD,EAAUC,MAAV,KAAqB;AACpCJ,IAAAA,KAAK,CAACK,GAAN,CAAW,wCAAuCU,MAAO,EAAzD,EACCT,IADD,CACMC,QAAQ,IAAI;AACd,UAAGA,QAAQ,CAACC,MAAT,IAAmB,KAAtB,EAA4B;AACxBL,QAAAA,OAAO,CAACI,QAAQ,CAACE,IAAV,CAAP;AACH,OAFD,MAEK;AACDL,QAAAA,MAAM,CAAC,KAAD,CAAN;AACH;AACJ,KAPD,EAQCM,KARD,CAQOC,GAAG,IAAI;AACVP,MAAAA,MAAM,CAAC,KAAD,CAAN;AACH,KAVD;AAWH,GAZM,CAAP;AAaH,CAdM","sourcesContent":["import React from 'react';\nimport Axios from 'axios';\n\nexport const getMovies = () => {\n    return new Promise((resolve, reject) => {\n        Axios.get('http://api.tvmaze.com/schedule')\n        .then(response => {\n            if(response.status == '200'){\n                resolve(response.data)\n            }else{\n                reject(false)\n            }\n        })\n        .catch(err => {\n            reject(false)\n        })\n    })\n}\n\nexport const getMovieById = (id) => {\n    return new Promise((resolve, reject) => {\n        Axios.get(`http://api.tvmaze.com/shows/${id}`)\n        .then(response => {\n            if(response.status == '200'){\n                resolve(response.data)\n            }else{\n                reject(false)\n            }\n        })\n        .catch(err => {\n            reject(false)\n        })\n    })\n}\n\nexport const getMovieByString = (string) => {\n    return new Promise((resolve, reject) => {\n        Axios.get(`http://api.tvmaze.com/search/shows?q=${string}`)\n        .then(response => {\n            if(response.status == '200'){\n                resolve(response.data)\n            }else{\n                reject(false)\n            }\n        })\n        .catch(err => {\n            reject(false)\n        })\n    })\n}"]},"metadata":{},"sourceType":"module"}